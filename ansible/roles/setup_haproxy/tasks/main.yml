- name: install haproxy package
  package:
    name: haproxy
    state: present
  when: op_mode == "install"

- name: create cert directory
  file:
    path: "{{ setupinfos.lb_cert_dir }}"
    state: directory
    owner: haproxy
    mode: '0655'
  when: op_mode == "install"

- name: copy public ca bundle
  copy:
    content: "{{ vault.certs.public_ca_bundle | b64decode }}"
    dest: "{{ setupinfos.lb_cert_dir }}/public-ca-bundle.crt"
    mode: '0644'
    owner: haproxy
  when: op_mode == "install"

- name: copy public server bundle
  copy:
    content: "{{ vault.certs.public_server_bundle | b64decode }}"
    dest: "{{ setupinfos.lb_cert_dir }}/public-server-bundle.pem"
    mode: '0644'
    owner: haproxy
  when: op_mode == "install"

- name: copy private ca bundle
  copy:
    content: "{{ vault.certs.private_ca_bundle | b64decode }}"
    dest: "/usr/local/share/ca-certificates/private-ca-bundle.crt"
    mode: '0644'
    owner: haproxy
  when: op_mode == "install"

- name: OS update of certificates
  shell: update-ca-certificates
  args:
    executable: /bin/bash
  when: op_mode == "install"

- name: get config template to directory
  template:
    src: "templates/haproxy.cfg.j2"
    dest: /etc/haproxy/haproxy.cfg
    mode: '0644'
    owner: haproxy
    group: haproxy
  changed_when: True
  notify: "h-restart-haproxy"
  when: op_mode == "install" or op_mode == "update-config"

- name: deinstall haproxy package
  package:
    name: haproxy
    state: absent
  when: op_mode == "uninstall"

- name: remove config directory
  file:
    path: /etc/haproxy
    state: absent
  when: op_mode == "uninstall"

- name: remove private cert ca
  file:
    path: "/usr/local/share/ca-certificates/private-ca-bundle.crt"
    state: absent
  when: op_mode == "uninstall"
