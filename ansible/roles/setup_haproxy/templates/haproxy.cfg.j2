global
        log /dev/log    local0
        log /dev/log    local1 notice
        chroot /var/lib/haproxy
        stats socket /run/haproxy/admin.sock mode 660 level admin
        stats timeout 30s
        user haproxy
        group haproxy
        daemon

        # Default SSL material locations & please copy your self-signed ca.crt's to /usr/local/share/ca-certificates
        ca-base /etc/ssl/certs
        crt-base /etc/ssl/private

        # See: https://ssl-config.mozilla.org/#server=haproxy&server-version=2.0.3&config=intermediate
        ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
        ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
        ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets

defaults
        log     global
        mode    http
        option  httplog
        option  dontlognull
        timeout connect 10000
        timeout client  10000
        timeout server  10000

resolvers internal
  nameserver home {{ setupinfos.local_dns }}:53

frontend gateway_01
  bind :443 ssl crt {{setupinfos.lb_cert_dir}}/public-server-bundle.pem
  mode http
  timeout client 10000
{% for DOM in setupinfos.haproxy_domains %}
  acl acl_{{DOM}} hdr(host) -i {{DOM}}.{{setupinfos.external_domain}}
  use_backend be_{{DOM}} if acl_{{DOM}}
{% endfor %}
  default_backend be_default

{% for DO in setupinfos.haproxy_domains %}
backend be_{{DO.domain}}
  mode http
  maxconn {{DO.maxc}}
  http-request set-header Host {{DO.domain}}.{{setupinfos.internal_domain}}
  server {{DO.domain}} {{DO.ip}} ssl verify required ca-file {{setupinfos.lb_cert_dir}}/private-server-bundle.pem
{% endfor %}

backend be_default
  mode http
  http-request set-header Host m0rpheus.ch
  server ngx 127.0.0.1:444 ssl verify required ca-file {{setupinfos.lb_cert_dir}}/public-ca-bundle.crt
